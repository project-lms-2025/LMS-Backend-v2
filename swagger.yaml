openapi: 3.0.0
info:
  title: Your API Title
  version: 1.0.0
  description: API description

tags:
  - name: Authentication
    description: Endpoints related to user authentication
  - name: User Management
    description: Endpoints for managing users

paths:
  /api/auth/register:
    post:
      tags:
        - Authentication
      summary: Register a new user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: User's name
                email:
                  type: string
                  format: email
                  description: User's email address
                phoneNumber:
                  type: string
                  description: User's phone number
                exam_registered_for:
                  type: string
                  description: Exam the user registered for
              required:
                - name
                - email
                - phoneNumber
                - exam_registered_for
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: User registered successfully
        '400':
          description: User already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: User already exists
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: An error occurred while registering the user
  /api/auth/create-user:
    post:
      tags:
        - User Management
      summary: Create a new user with a specific role (sub-admin, owner, teacher)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: User's name
                email:
                  type: string
                  format: email
                  description: User's email address
                phoneNumber:
                  type: string
                  description: User's phone number
                exam_registered_for:
                  type: string
                  description: Exam the user registered for (optional)
                role:
                  type: string
                  enum:
                    - sub-admin
                    - owner
                    - teacher
                  description: User's role
              required:
                - name
                - email
                - phoneNumber
                - role
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: User created successfully
                  data: # Example Data property, adjust as needed.
                    type: object
                    description: User data
        '400':
          description: Bad request (e.g., invalid role, user already exists)
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Invalid role or User already exists
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: An error occurred while creating the user
  /api/auth/login:
    post:
      tags:
        - Authentication
      summary: Login with email and OTP
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: User's email address
                otp:
                  type: string
                  description: One-time password
                deviceType:
                  type: string
                  description: Type of device used for login
              required:
                - email
                - otp
                - deviceType
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Login successful
                  authToken:
                    type: string
                    description: Authentication token
        '400':
          description: Bad request (e.g., invalid OTP, OTP expired, OTP not found)
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Invalid OTP
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Something went wrong while logging in
  /api/auth/send-login-otp:
    post:
      tags:
        - Authentication
      summary: Send login OTP to user's email
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                phoneNumber:
                  type: string
                  description: User's phone number
              required:
                - phoneNumber
      responses:
        '200':
          description: OTP sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: OTP sent to your email
                  email:
                    type: string
                    format: email
                    description: User's email address
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: User not found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Something went wrong while sending OTP
  /api/auth/logout:
    delete:
      tags:
        - Authentication
      summary: Logout a user
      parameters: 
        - in: query 
          name: email
          schema:
            type: string
            format: email
          required: true
          description: User's email address
        - in: query 
          name: deviceType
          schema:
            type: string
          required: true
          description: Type of device
      responses:
        '200':
          description: Logged out successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Logged out successfully
        '500':
          description: Logout failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: Logout failed
