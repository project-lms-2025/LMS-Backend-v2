openapi: 3.0.0
info:
  title: Test Management API
  description: API for managing tests, test series, questions, options, and results
  version: 1.0.0
servers:
  - url: /api

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Test:
      type: object
      properties:
        test_id:
          type: string
        teacher_id:
          type: string
        course_id:
          type: string
        title:
          type: string
        description:
          type: string
        schedule_date:
          type: string
          format: date
        schedule_time:
          type: string
          format: time
        duration:
          type: integer
        total_marks:
          type: integer
        questions:
          type: array
          items:
            $ref: '#/components/schemas/Question'
      required:
        - test_id
        - teacher_id
        - course_id
        - title
        - schedule_date
        - schedule_time
        - duration
        - total_marks

    TestSeries:
      type: object
      properties:
        series_id:
          type: string
        teacher_id:
          type: string
        title:
          type: string
        description:
          type: string
        total_tests:
          type: integer
        created_at:
          type: string
          format: date-time
      required:
        - series_id
        - teacher_id
        - title
        - total_tests

    TSTest:
      type: object
      properties:
        test_id:
          type: string
        teacher_id:
          type: string
        series_id:
          type: string
        title:
          type: string
        description:
          type: string
        schedule_date:
          type: string
          format: date
        schedule_time:
          type: string
          format: time
        duration:
          type: integer
        total_marks:
          type: integer
        questions:
          type: array
          items:
            $ref: '#/components/schemas/Question'
      required:
        - test_id
        - teacher_id
        - series_id
        - title
        - schedule_date
        - schedule_time
        - duration
        - total_marks

    Question:
      type: object
      properties:
        question_id:
          type: string
        test_id:
          type: string
        question_type:
          type: string
          enum: [MCQ, MSQ, NAT]
        question_text:
          type: string
        image_url:
          type: string
        positive_marks:
          type: integer
        negative_marks:
          type: integer
        section:
          type: string
        correct_option_id:
          type: string
        options:
          type: array
          items:
            $ref: '#/components/schemas/Option'
      required:
        - question_id
        - test_id
        - question_type
        - question_text
        - positive_marks
        - negative_marks

    Option:
      type: object
      properties:
        option_id:
          type: string
        question_id:
          type: string
        option_text:
          type: string
        image_url:
          type: string
        is_correct:
          type: boolean
      required:
        - option_id
        - question_id
        - option_text
        - is_correct

    Result:
      type: object
      properties:
        test_id:
          type: string
        student_id:
          type: string
        final_score:
          type: integer
        created_at:
          type: string
          format: date-time
      required:
        - test_id
        - student_id
        - final_score

paths:
  # Regular Test Routes
  /tests:
    get:
      summary: Get all tests
      tags:
        - Regular Tests
      security:
        - BearerAuth: []
      responses:
        '200':
          description: List of tests
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Test'

    post:
      summary: Create a new test
      tags:
        - Regular Tests
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Test'
      responses:
        '201':
          description: Test created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Test'

  /tests/{test_id}:
    get:
      summary: Get a specific test
      tags:
        - Regular Tests
      security:
        - BearerAuth: []
      parameters:
        - name: test_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Test details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Test'

    put:
      summary: Update a test
      tags:
        - Regular Tests
      security:
        - BearerAuth: []
      parameters:
        - name: test_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Test'
      responses:
        '200':
          description: Test updated successfully

    delete:
      summary: Delete a test
      tags:
        - Regular Tests
      security:
        - BearerAuth: []
      parameters:
        - name: test_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Test deleted successfully

  # Test Series Routes
  /test-series:
    post:
      summary: Create a new test series
      tags:
        - Test Series
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestSeries'
      responses:
        '201':
          description: Test series created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestSeries'

    get:
      summary: Get all test series
      tags:
        - Test Series
      security:
        - BearerAuth: []
      responses:
        '200':
          description: List of test series
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestSeries'

  /test-series/{series_id}:
    get:
      summary: Get a specific test series
      tags:
        - Test Series
      security:
        - BearerAuth: []
      parameters:
        - name: series_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Test series details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestSeries'

    put:
      summary: Update a test series
      tags:
        - Test Series
      security:
        - BearerAuth: []
      parameters:
        - name: series_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestSeries'
      responses:
        '200':
          description: Test series updated successfully

    delete:
      summary: Delete a test series
      tags:
        - Test Series
      security:
        - BearerAuth: []
      parameters:
        - name: series_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Test series deleted successfully

  /test-series/{series_id}/tests:
    get:
      summary: Get all tests in a series
      tags:
        - Test Series
      security:
        - BearerAuth: []
      parameters:
        - name: series_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of tests in the series
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TSTest'

  /test-series/{series_id}/tests/{test_id}:
    get:
      summary: Get a specific test in a series
      tags:
        - Test Series
      security:
        - BearerAuth: []
      parameters:
        - name: series_id
          in: path
          required: true
          schema:
            type: string
        - name: test_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Test details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TSTest'

  # Common Routes for both Regular Tests and Test Series Tests
  /tests/{test_id}/submit:
    post:
      summary: Submit test responses
      tags:
        - Common
      security:
        - BearerAuth: []
      parameters:
        - name: test_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                responses:
                  type: array
                  items:
                    type: object
                    properties:
                      question_id:
                        type: string
                      options_chosen:
                        type: array
                        items:
                          type: string
                      response_text:
                        type: string
              required:
                - responses
      responses:
        '200':
          description: Responses submitted successfully

  /tests/{test_id}/results:
    get:
      summary: Get test results
      tags:
        - Common
      security:
        - BearerAuth: []
      parameters:
        - name: test_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Test results
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Result'