openapi: 3.0.0
info:
  title: Test Management API
  description: API for managing tests, questions, options, and results.
  version: 1.0.0
servers:
  - url: /api/test

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Test:
      type: object
      properties:
        test_id:
          type: string
        teacher_id:
          type: string
        course_id:
          type: string
        title:
          type: string
        description:
          type: string
        scheduled_date_time:
          type: string
          format: date-time
        time_duration:
          type: integer

    Question:
      type: object
      properties:
        question_id:
          type: string
        test_id:
          type: string
        question_type:
          type: string
        question_text:
          type: string
        image_url:
          type: string
        positive_marks:
          type: integer
        negative_marks:
          type: integer

    Option:
      type: object
      properties:
        option_id:
          type: string
        question_id:
          type: string
        option_text:
          type: string
        image_url:
          type: string
        is_correct:
          type: boolean

    Result:
      type: object
      properties:
        result_id:
          type: string
        test_id:
          type: string
        student_id:
          type: string
        student_score:
          type: integer
        student_rank:
          type: integer
        total_marks:
          type: integer
        correct_count:
          type: integer
        wrong_count:
          type: integer

    StudentAnswers:
      type: object
      properties:
        student_id:
          type: string
        answers:
          type: array
          items:
            type: object
            properties:
              question_id:
                type: string
              response_text:
                type: string
              option_ids:
                type: array
                items:
                  type: string
              is_correct:
                type: boolean

paths:
  /tests:
    get:
      summary: Get all tests
      tags:
        - test
      security:
        - BearerAuth: []
      responses:
        '200':
          description: List of tests
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Test'

    post:
      summary: Create a new test
      tags:
        - test
      security:
        - BearerAuth: []
      requestBody:
        description: Test object that needs to be created
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Test'
      responses:
        '201':
          description: Test created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Test'

  /tests/{test_id}:
    get:
      summary: Get a specific test
      tags:
        - test
      security:
        - BearerAuth: []
      parameters:
        - name: test_id
          in: path
          required: true
          description: The ID of the test
          schema:
            type: string
      responses:
        '200':
          description: A specific test
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Test'

    put:
      summary: Update a test
      tags:
        - test
      security:
        - BearerAuth: []
      parameters:
        - name: test_id
          in: path
          required: true
          description: The ID of the test
          schema:
            type: string
      requestBody:
        description: Test object that needs to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Test'
      responses:
        '200':
          description: Test updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Test'

    delete:
      summary: Delete a test
      tags:
        - test
      security:
        - BearerAuth: []
      parameters:
        - name: test_id
          in: path
          required: true
          description: The ID of the test to delete
          schema:
            type: string
      responses:
        '204':
          description: Test deleted successfully

  /tests/{test_id}/questions:
    get:
      summary: Get all questions for a test
      tags:
        - test/questions
      security:
        - BearerAuth: []
      parameters:
        - name: test_id
          in: path
          required: true
          description: The ID of the test
          schema:
            type: string
      responses:
        '200':
          description: List of questions for a test
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question'

    post:
      summary: Create a new question for a test
      tags:
        - test/questions
      security:
        - BearerAuth: []
      parameters:
        - name: test_id
          in: path
          required: true
          description: The ID of the test
          schema:
            type: string
      requestBody:
        description: Question object that needs to be created
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Question'
      responses:
        '201':
          description: Question created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'

  /questions/{question_id}:
    get:
      summary: Get a specific question
      tags:
        - test/questions
      security:
        - BearerAuth: []
      parameters:
        - name: question_id
          in: path
          required: true
          description: The ID of the question
          schema:
            type: string
      responses:
        '200':
          description: A specific question
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'

    put:
      summary: Update a question
      tags:
        - test/questions
      security:
        - BearerAuth: []
      parameters:
        - name: question_id
          in: path
          required: true
          description: The ID of the question to update
          schema:
            type: string
      requestBody:
        description: Question object that needs to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Question'
      responses:
        '200':
          description: Question updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'

    delete:
      summary: Delete a question
      tags:
        - test/questions
      security:
        - BearerAuth: []
      parameters:
        - name: question_id
          in: path
          required: true
          description: The ID of the question to delete
          schema:
            type: string
      responses:
        '204':
          description: Question deleted successfully

  /questions/{question_id}/options:
    get:
      summary: Get all options for a question
      tags:
        - test/options
      security:
        - BearerAuth: []
      parameters:
        - name: question_id
          in: path
          required: true
          description: The ID of the question
          schema:
            type: string
      responses:
        '200':
          description: List of options for a question
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Option'

    post:
      summary: Create a new option for a question
      tags:
        - test/options
      security:
        - BearerAuth: []
      parameters:
        - name: question_id
          in: path
          required: true
          description: The ID of the question
          schema:
            type: string
      requestBody:
        description: Option object that needs to be created
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Option'
      responses:
        '201':
          description: Option created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Option'

  /options/{option_id}:
    put:
      summary: Update an option
      tags:
        - test/options
      security:
        - BearerAuth: []
      parameters:
        - name: option_id
          in: path
          required: true
          description: The ID of the option to update
          schema:
            type: string
      requestBody:
        description: Option object that needs to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Option'
      responses:
        '200':
          description: Option updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Option'

    delete:
      summary: Delete an option
      tags:
        - test/options
      security:
        - BearerAuth: []
      parameters:
        - name: option_id
          in: path
          required: true
          description: The ID of the option to delete
          schema:
            type: string
      responses:
        '204':
          description: Option deleted successfully

  /tests/{test_id}/results:
    get:
      summary: Get all results for a test
      tags:
        - test/results
      security:
        - BearerAuth: []
      parameters:
        - name: test_id
          in: path
          required: true
          description: The ID of the test
          schema:
            type: string
      responses:
        '200':
          description: List of results for a test
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Result'

    post:
      summary: Create a new result for a test
      tags:
        - test/results
      security:
        - BearerAuth: []
      parameters:
        - name: test_id
          in: path
          required: true
          description: The ID of the test
          schema:
            type: string
      requestBody:
        description: Result object that needs to be created
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Result'
      responses:
        '201':
          description: Result created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'

  /results/{result_id}:
    get:
      summary: Get a specific result
      tags:
        - test/results
      security:
        - BearerAuth: []
      parameters:
        - name: result_id
          in: path
          required: true
          description: The ID of the result
          schema:
            type: string
      responses:
        '200':
          description: A specific result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'

    put:
      summary: Update a result
      tags:
        - test/results
      security:
        - BearerAuth: []
      parameters:
        - name: result_id
          in: path
          required: true
          description: The ID of the result to update
          schema:
            type: string
      requestBody:
        description: Result object that needs to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Result'
      responses:
        '200':
          description: Result updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'

  /tests/{test_id}/submit:
    post:
      summary: Submit student answers for a test
      tags:
        - student_answers
      security:
        - BearerAuth: []
      parameters:
        - name: test_id
          in: path
          required: true
          description: The ID of the test
          schema:
            type: string
      requestBody:
        description: Student responses for the test
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentAnswers'
      responses:
        '201':
          description: Student answers submitted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentAnswers'
